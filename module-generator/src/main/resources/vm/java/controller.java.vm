package ${packageName}.controller.${businessName};

import com.chainxi.common.web.pojo.PageResult;
import com.chainxi.common.web.pojo.ResponseResult;
import com.chainxi.common.web.utils.ExcelUtils;
import jakarta.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.domain.${businessName}.${ClassName};
import ${packageName}.reqvo.${businessName}.${QueryReqClassName};
import ${packageName}.reqvo.${businessName}.${ClassName}CreateReqVo;
import ${packageName}.reqvo.${businessName}.${ClassName}UpdateReqVo;
import ${packageName}.service.${businessName}.I${ClassName}Service;
import java.io.IOException;
import java.util.List;

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}/${className}")
public class ${ClassName}Controller
{
    @Autowired
    private I${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
#if($table.crud)
    @GetMapping("/query-page")
    public ResponseResult<PageResult<${ClassName}>> queryPage(${QueryReqClassName} reqVo)
    {
        return ResponseResult.success(${className}Service.select${ClassName}Page(reqVo));
    }

    /**
     * 导出${functionName}列表
     */
    @GetMapping("/export")
    public void export${BusinessName}(HttpServletResponse response, ${QueryReqClassName} reqVo) throws IOException
    {
        List<${ClassName}> list = ${className}Service.select${ClassName}Page(reqVo).getList();
        ExcelUtils.write(response, "${functionName}数据.xls", "${functionName}列表", ${ClassName}.class, list);
    }
#elseif($table.tree)
    @GetMapping("/query-list")
    public ResponseResult<List<${ClassName}>> query${BusinessName}List(${QueryReqClassName} reqVo)
    {
        return ResponseResult.success(${className}Service.select${ClassName}List(reqVo));
    }
#end

    /**
     * 获取${functionName}详细信息
     */
    @GetMapping(value = "/query")
    public ResponseResult query${BusinessName}(@RequestParam("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField})
    {
        return ResponseResult.success(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @PostMapping(value = "/create")
    public ResponseResult create${BusinessName}(@RequestBody ${ClassName}CreateReqVo reqVo)
    {
        return ResponseResult.success(${className}Service.create${ClassName}(reqVo));
    }

    /**
     * 修改${functionName}
     */
    @PutMapping
    public ResponseResult update${BusinessName}(@RequestBody ${ClassName}UpdateReqVo reqVo)
    {
        return ResponseResult.success(${className}Service.update${ClassName}(reqVo));
    }

    /**
     * 删除${functionName}
     */
	@DeleteMapping("/remove")
    public ResponseResult delete${BusinessName}(@RequestParam ${pkColumn.javaType}[] ${pkColumn.javaField}s)
    {
        return ResponseResult.success(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
    }
}
