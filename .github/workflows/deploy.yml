name: QuickStart
on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      environment:
        description: "Select deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - stg

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v5

      - name: Set lowercase image tag
        id: set_image_tag
        run: |
          LOWERCASE_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG="$LOWERCASE_REPO:${{ github.sha }}"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and save Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: chainxi-admin/
          push: false
          tags: ${{ env.IMAGE_TAG }},latest

      - name: Save Docker image as artifact
        run: docker save -o image.tar ${{ env.IMAGE_TAG }}

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build  # 依赖 build job
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'dev' }}
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: ./

      - name: Transfer image to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PEM_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: "image.tar"
          target: /opt/docker/tmp/

      - name: Deploy on remote server
        uses: appleboy/ssh-action@v1
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PEM_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            sudo docker load -i /opt/docker/tmp/image.tar
            sudo docker stop chainxi-admin || true
            sudo docker rm chainxi-admin || true
            sudo docker run --name chainxi-admin \
              --network docker-compose_default \
              -dp 8080:8080 ${{ env.IMAGE_TAG }}